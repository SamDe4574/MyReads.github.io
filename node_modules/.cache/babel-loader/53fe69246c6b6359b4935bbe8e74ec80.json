{"ast":null,"code":"import _classCallCheck from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/h_h-xd/Documents/React/projects/MyReads/src/AddBook.js\";\nimport React, { Component } from 'react';\nimport BookCard from './BookCard';\nimport PropTypes from 'prop-types';\nimport * as BooksAPI from './BooksAPI';\nimport { Link } from 'react-router-dom';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddBook, _React$Component);\n\n  function AddBook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddBook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      showingBooks: []\n    };\n\n    _this.updateSearch = function (query) {\n      _this.setState({\n        query: query\n      });\n\n      if (_this.state.query) {\n        BooksAPI.search(query).then(function (queryBooks) {\n          if (queryBooks instanceof Array) {\n            queryBooks.forEach(function (queryBook) {\n              queryBook.shelf = 'none';\n\n              _this.props.books.map(function (bookInLibrary) {\n                if (bookInLibrary.id === queryBook.id) {\n                  queryBook.shelf = bookInLibrary.shelf;\n                }\n\n                return queryBook;\n              });\n            });\n\n            _this.setState({\n              showingBooks: queryBooks\n            });\n          } else {\n            _this.setState({\n              showingBooks: []\n            });\n          }\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        _this.setState({\n          showingBooks: []\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          query = _this$state.query,\n          showingBooks = _this$state.showingBooks;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        autoFocus: \"true\",\n        type: \"text\",\n        placeholder: \"Search by category\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateSearch(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, query && showingBooks.map(function (book) {\n        return book.imageLinks ? React.createElement(Book, {\n          book: book,\n          shelf: book.shelf,\n          title: book.title,\n          author: book.authors,\n          img: book.imageLinks.thumbnail,\n          key: book.id,\n          onUpdateShelf: _this2.props.onUpdateShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }) : React.createElement(Book, {\n          book: book,\n          shelf: book.shelf,\n          title: book.title,\n          author: book.authors,\n          key: book.id,\n          onUpdateShelf: _this2.props.onUpdateShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      })), query.length > 2 && showingBooks.length === 0 && React.createElement(\"div\", {\n        className: \"search-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Sorry :(\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Unfortunately, no book matches your search. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"Please, type another category.\"))));\n    }\n  }]);\n\n  return AddBook;\n}(React.Component);\n\nSearchBook.propTypes = {\n  books: PropTypes.array,\n  query: PropTypes.string\n};\nexport default AddBook;","map":{"version":3,"sources":["/Users/h_h-xd/Documents/React/projects/MyReads/src/AddBook.js"],"names":["React","Component","BookCard","PropTypes","BooksAPI","Link","AddBook","state","query","showingBooks","updateSearch","setState","search","then","queryBooks","Array","forEach","queryBook","shelf","props","books","map","bookInLibrary","id","catch","error","console","log","event","target","value","book","imageLinks","title","authors","thumbnail","onUpdateShelf","length","SearchBook","propTypes","array","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BookCard from './BookCard';\nimport PropTypes from 'prop-types';\nimport * as BooksAPI from './BooksAPI'\nimport { Link } from 'react-router-dom';\n\n\nclass AddBook extends React.Component {\n  state = {\n    query: '',\n    showingBooks: []\n  }\n\n  updateSearch = (query) => {\n    this.setState({ query })\n\n    if (this.state.query) {\n      BooksAPI.search(query)\n      .then((queryBooks) => {\n        if (queryBooks instanceof Array) {\n          queryBooks.forEach( queryBook => {\n            queryBook.shelf = 'none'\n            this.props.books.map( (bookInLibrary) => {\n              if (bookInLibrary.id === queryBook.id) {\n                queryBook.shelf = bookInLibrary.shelf\n              }\n              return queryBook\n            })\n          })\n          this.setState({ showingBooks: queryBooks})\n        } else {\n          this.setState({ showingBooks: []})\n        }\n      })\n      .catch( error => console.log(error) )\n    } else {\n      this.setState({ showingBooks: []})\n    }\n  }\n\n  render() {\n    const { query, showingBooks } = this.state\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">Close</Link>\n          <div className=\"search-books-input-wrapper\">\n\n            <input\n              autoFocus=\"true\"\n              type=\"text\"\n              placeholder=\"Search by category\"\n              value={query}\n              onChange={(event) => this.updateSearch(event.target.value)}\n            />\n\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {query && showingBooks.map( (book) => (\n            (book.imageLinks) ?\n            <Book book={book} shelf={book.shelf} title={book.title} author={book.authors} img={book.imageLinks.thumbnail} key={book.id} onUpdateShelf={this.props.onUpdateShelf}/>\n            :\n            <Book book={book} shelf={book.shelf} title={book.title} author={book.authors} key={book.id} onUpdateShelf={this.props.onUpdateShelf}/>\n          ))}\n          </ol>\n\n          {query.length > 2 && showingBooks.length ===0 && (\n            <div className=\"search-error\">\n              <h4>Sorry :&#40;</h4>\n              <p>Unfortunately, no book matches your search. <br />\n              Please, type another category.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchBook.propTypes = {\n  books: PropTypes.array,\n  query: PropTypes.string\n}\n\nexport default AddBook\n"]},"metadata":{},"sourceType":"module"}