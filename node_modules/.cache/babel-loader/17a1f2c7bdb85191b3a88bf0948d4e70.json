{"ast":null,"code":"import _classCallCheck from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/h_h-xd/Documents/React/projects/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/h_h-xd/Documents/React/projects/MyReads/src/AddBook.js\";\nimport React, { Component } from 'react';\nimport BookCard from './BookCard';\nimport PropTypes from 'prop-types';\nimport * as BooksAPI from './BooksAPI';\nimport { Link } from 'react-router-dom';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddBook, _React$Component);\n\n  function AddBook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddBook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      books: []\n    };\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"searchQuery\",\n    value: function searchQuery(query) {\n      var _this2 = this;\n\n      this.setState({\n        query: query\n      });\n      var trimmedQuery = query.trim();\n      if (trimmedQuery === '') return;\n\n      if (this.state.query) {\n        BooksAPI.search(trimmedQuery).then(function (results) {\n          var books = results.map(function (book) {\n            return {\n              id: book.id,\n              shelf: book.shelf,\n              authors: book.authors,\n              title: book.title,\n              imageLinks: {\n                thumbnail: book.imageLinks.thumbnail\n              }\n            };\n          });\n\n          _this2.setState({\n            books: books\n          });\n        });\n      } else {\n        this.setState({\n          books: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var moveToShelf = this.props.moveToShelf;\n      var books = this.state.books;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        onChange: function onChange(e) {\n          return _this3.searchQuery(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, query && books.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(BookCard, {\n          bookCard: book,\n          moveToShelf: moveToShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return AddBook;\n}(React.Component);\n\nAddBook.propTypes = {\n  moveToShelf: PropTypes.func.isRequired\n};\nexport default AddBook;","map":{"version":3,"sources":["/Users/h_h-xd/Documents/React/projects/MyReads/src/AddBook.js"],"names":["React","Component","BookCard","PropTypes","BooksAPI","Link","AddBook","state","query","books","setState","trimmedQuery","trim","search","then","results","map","book","id","shelf","authors","title","imageLinks","thumbnail","moveToShelf","props","showSearchPage","e","searchQuery","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BookCard from './BookCard';\nimport PropTypes from 'prop-types';\nimport * as BooksAPI from './BooksAPI'\nimport { Link } from 'react-router-dom';\n\n\nclass AddBook extends React.Component {\n  static propTypes = {\n      moveToShelf: PropTypes.func.isRequired,\n  }\n\n  state = {\n  query: '',\n  books: []\n}\n\nsearchQuery(query) {\n  this.setState({ query: query })\n  const trimmedQuery = query.trim()\n  if (trimmedQuery === '') return\n\n  if (this.state.query) {\n  BooksAPI.search(trimmedQuery).then((results) => {\n    const books = results.map((book) => {\n      return {\n        id: book.id,\n        shelf: book.shelf,\n        authors: book.authors,\n        title: book.title,\n        imageLinks: {\n          thumbnail: book.imageLinks.thumbnail\n        }\n      }\n    })\n    this.setState({ books: books })\n    })\n}  else {\n          this.setState({ books: []})\n        }\n}\n    render() {\n      const { moveToShelf } = this.props\n      const { books } = this.state\n\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                  <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n                    <div className=\"search-books-input-wrapper\">\n\n                        <input\n                          type=\"text\"\n                          placeholder=\"Search by title or author\"\n                          onChange={(e) => this.searchQuery(e.target.value)}\n                        />\n\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                  <ol className=\"books-grid\">\n                      {query && books\n                          .map((book) => (\n                              <li key={book.id}>\n                                  <BookCard\n                                      bookCard={book}\n                                      moveToShelf={moveToShelf} />\n                              </li>\n                          ))}\n                  </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddBook\n"]},"metadata":{},"sourceType":"module"}